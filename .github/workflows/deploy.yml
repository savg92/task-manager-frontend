name: Deploy Frontend to AWS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      # The build script already includes type-checking
      - name: Build project
        run: npm run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }} # Use OIDC role ARN from secrets
          aws-region: ${{ secrets.AWS_REGION }} # e.g., us-east-1

      - name: Deploy assets to S3
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }} # e.g., task-manager-frontend.example.com
        run: |
          aws s3 sync dist/ s3://${S3_BUCKET} --delete \
            --cache-control public,max-age=31536000,immutable \
            --exclude index.html

      - name: Deploy index.html to S3
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          aws s3 cp dist/index.html s3://${S3_BUCKET}/ \
            --cache-control no-cache,no-store,max-age=0

      - name: Invalidate CloudFront cache
        env:
          CLOUDFRONT_DIST_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} # e.g., E31BJ33VTNLI98
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${CLOUDFRONT_DIST_ID} \
            --paths "/index.html"
